type GcpInstance {
  id: ID!
  name: String!
  status: GpcInstanceStatus!
  zone: String!
}

enum GpcInstanceStatus {
  PROVISIONING
  REPAIRING
  RUNNING
  STAGING
  STOPPING
  SUSPENDED
  SUSPENDING
  TERMINATED
}

type Mutation {
  registerFcmToken(input: RegisterFcmTokenInput!): RegisterFcmTokenPayload
  resetGcpInstance(input: ResetGcpInstanceInput!): ResetGcpInstancePayload
  startGcpInstance(input: StartGcpInstanceInput!): StartGcpInstancePayload
  stopGcpInstance(input: StopGcpInstanceInput!): StopGcpInstancePayload
}

type ParsecHost {
  name: String!
  peerId: ID!
  players: Int!
}

type Query {
  gcpInstances: [GcpInstance!]!
  parsecHosts: [ParsecHost!]
}

"""
Autogenerated input type of RegisterFcmToken
"""
input RegisterFcmTokenInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  token: String!
}

"""
Autogenerated return type of RegisterFcmToken
"""
type RegisterFcmTokenPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  ok: Boolean!
}

"""
Autogenerated input type of ResetGcpInstance
"""
input ResetGcpInstanceInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
  zone: String!
}

"""
Autogenerated return type of ResetGcpInstance
"""
type ResetGcpInstancePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  ok: Boolean!
}

"""
Autogenerated input type of StartGcpInstance
"""
input StartGcpInstanceInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
  zone: String!
}

"""
Autogenerated return type of StartGcpInstance
"""
type StartGcpInstancePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  ok: Boolean!
}

"""
Autogenerated input type of StopGcpInstance
"""
input StopGcpInstanceInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
  zone: String!
}

"""
Autogenerated return type of StopGcpInstance
"""
type StopGcpInstancePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  ok: Boolean!
}