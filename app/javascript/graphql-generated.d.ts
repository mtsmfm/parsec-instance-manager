export type Maybe<T> = T | null;
export type Exact<T extends { [key: string]: any }> = { [K in keyof T]: T[K] };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  /** An ISO 8601-encoded datetime */
  ISO8601DateTime: any;
};

/** Autogenerated input type of AddInstanceManagementRule */
export type AddInstanceManagementRuleInput = {
  peerId: Scalars['String'];
  startEndpoint: Scalars['String'];
  stopEndpoint: Scalars['String'];
  resetEndpoint: Scalars['String'];
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
};

/** Autogenerated return type of AddInstanceManagementRule */
export type AddInstanceManagementRulePayload = {
  __typename?: 'AddInstanceManagementRulePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  instanceManagementRule: InstanceManagementRule;
};

/** Autogenerated input type of AddParsecSession */
export type AddParsecSessionInput = {
  email: Scalars['String'];
  password: Scalars['String'];
  tfa: Scalars['String'];
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
};

/** Autogenerated return type of AddParsecSession */
export type AddParsecSessionPayload = {
  __typename?: 'AddParsecSessionPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  ok: Scalars['Boolean'];
};


export type InstanceManagementRule = {
  __typename?: 'InstanceManagementRule';
  createdAt: Scalars['ISO8601DateTime'];
  id: Scalars['ID'];
  peerId: Scalars['String'];
  resetEndpoint: Scalars['String'];
  startEndpoint: Scalars['String'];
  stopEndpoint: Scalars['String'];
};

export type Mutation = {
  __typename?: 'Mutation';
  addInstanceManagementRule?: Maybe<AddInstanceManagementRulePayload>;
  addParsecSession?: Maybe<AddParsecSessionPayload>;
  removeParsecSession?: Maybe<RemoveParsecSessionPayload>;
};


export type MutationAddInstanceManagementRuleArgs = {
  input: AddInstanceManagementRuleInput;
};


export type MutationAddParsecSessionArgs = {
  input: AddParsecSessionInput;
};


export type MutationRemoveParsecSessionArgs = {
  input: RemoveParsecSessionInput;
};

export type ParsecHost = {
  __typename?: 'ParsecHost';
  name: Scalars['String'];
  peerId: Scalars['ID'];
  players: Scalars['Int'];
};

export type ParsecSession = {
  __typename?: 'ParsecSession';
  createdAt: Scalars['ISO8601DateTime'];
  hosts?: Maybe<Array<ParsecHost>>;
  id: Scalars['ID'];
};

export type Query = {
  __typename?: 'Query';
  instanceManagementRules: Array<InstanceManagementRule>;
  parsecSessions: Array<ParsecSession>;
};

/** Autogenerated input type of RemoveParsecSession */
export type RemoveParsecSessionInput = {
  id: Scalars['ID'];
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
};

/** Autogenerated return type of RemoveParsecSession */
export type RemoveParsecSessionPayload = {
  __typename?: 'RemoveParsecSessionPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  ok: Scalars['Boolean'];
};

export type AppQueryVariables = Exact<{ [key: string]: never; }>;


export type AppQuery = (
  { __typename?: 'Query' }
  & { parsecSessions: Array<(
    { __typename?: 'ParsecSession' }
    & ParsecSessions_ParsecSessionFragment
  )>, instanceManagementRules: Array<(
    { __typename?: 'InstanceManagementRule' }
    & InstanceManagementRules_InstanceManagementRuleFragment
  )> }
);

export type AddInstanceManegementRuleMutationVariables = Exact<{
  peerId: Scalars['String'];
  startEndpoint: Scalars['String'];
  stopEndpoint: Scalars['String'];
  resetEndpoint: Scalars['String'];
}>;


export type AddInstanceManegementRuleMutation = (
  { __typename?: 'Mutation' }
  & { addInstanceManagementRule?: Maybe<(
    { __typename?: 'AddInstanceManagementRulePayload' }
    & { instanceManagementRule: (
      { __typename?: 'InstanceManagementRule' }
      & Pick<InstanceManagementRule, 'id'>
    ) }
  )> }
);

export type InstanceManagementRules_InstanceManagementRuleFragment = (
  { __typename?: 'InstanceManagementRule' }
  & Pick<InstanceManagementRule, 'id' | 'createdAt' | 'peerId' | 'startEndpoint' | 'stopEndpoint' | 'resetEndpoint'>
);

export type AddParsecSessionMutationVariables = Exact<{
  email: Scalars['String'];
  password: Scalars['String'];
  tfa: Scalars['String'];
}>;


export type AddParsecSessionMutation = (
  { __typename?: 'Mutation' }
  & { addParsecSession?: Maybe<(
    { __typename?: 'AddParsecSessionPayload' }
    & Pick<AddParsecSessionPayload, 'ok'>
  )> }
);

export type ParsecSessions_ParsecSessionFragment = (
  { __typename?: 'ParsecSession' }
  & Pick<ParsecSession, 'id' | 'createdAt'>
  & { hosts?: Maybe<Array<(
    { __typename?: 'ParsecHost' }
    & Pick<ParsecHost, 'name' | 'players' | 'peerId'>
  )>> }
);
